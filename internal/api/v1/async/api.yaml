openapi: 3.0.2

info:
  version: 1.0.0
  title: Agnostic Proxy Async API

servers:
  - url: /v1/async

security:
  - Secret: []

components:
  securitySchemes:
    Secret:
      type: http
      scheme: Basic

  schemas:
    SortBy:
      type: string
      enum:
        - CREATED_AT
        - COMPLETED_AT

    SearchQueryItem:
      type: object
      required: 
        - query_id
      properties:
        query_id:
          type: string
        query_hash:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionStatus'
          default:
            - SUCCEEDED
            - FAILED
        limit:
          type: integer
          format: int32
          default: 3
        sort_by:
          $ref: '#/components/schemas/SortBy'
          default: COMPLETED_AT
    
    SearchQuery:
      type: array
      items: 
        $ref: '#/components/schemas/SearchQueryItem'

    SearchResult:
      type: array
      items:
        type: array
        items:
          $ref: '#/components/schemas/Execution'

    ExecutionStatus:
      type: string
      enum:
        - PENDING
        - RUNNING
        - CANCELED
        - FAILED
        - SUCCEEDED

    Execution:
      type: object
      required:
        - id
        - query_id
        - query_hash
        - created_at
        - query
        - status
      properties:
        id: 
          type: integer
          format: int64
        query_id:
          type: string
        query_hash:
          type: string
        created_at:
          type: string
          format: date-time
        query:
          type: string
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        picked_at: 
          type: string
          format: date-time
        progress:
          $ref: '../common.yaml#/components/schemas/Progress'
        completed_at: 
          type: string
          format: date-time
        result:
          $ref: '#/components/schemas/ResultMetadata'  
        error: 
          type: string

    ResultMetadata:
      type: object
      properties:
        meta:
          type: array
          items:
            $ref: '../common.yaml#/components/schemas/Column'
        rows:
          type: integer
          format: int64

  parameters:
    ExecutionId:
      in: path
      name: execution_id
      required: true
      schema:
        type: integer
        format: int64

    QueryId:
      in: query
      name: query-id
      schema:
        type: string

    Signature:
      in: query
      name: signature
      required: true
      schema:
        type: string

    Expiration:
      in: query
      name: expiration
      required: true
      schema:
        type: integer
        format: int64

paths:
  /executions:
    post:
      parameters:
        - $ref: '../common.yaml#/components/parameters/Tier'
        - $ref: '../common.yaml#/components/parameters/QuotaKey'
        - $ref: '#/components/parameters/QueryId'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"

  /executions/{execution_id}:
    get:
      parameters:
        - $ref: '../common.yaml#/components/parameters/Tier'
        - $ref: '../common.yaml#/components/parameters/QuotaKey'
        - $ref: "#/components/parameters/ExecutionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
        "404": {}

  /executions/{execution_id}/result:
    get:
      security:
        - {}
      parameters:
        - $ref: '../common.yaml#/components/parameters/Tier'
        - $ref: '../common.yaml#/components/parameters/QuotaKey'
        - $ref: '#/components/parameters/ExecutionId'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expiration'
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '../common.yaml#/components/schemas/Result'
        "404": {}

  /search:
    post:
      parameters:
        - $ref: '../common.yaml#/components/parameters/Tier'
        - $ref: '../common.yaml#/components/parameters/QuotaKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'